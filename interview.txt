üìö Example Project: Library Management System
We‚Äôll have three tables:

1Ô∏è‚É£ library
One Library ‚Üí Many Books (One-to-Many)

Columns:

id (PK, INT, AUTO_INCREMENT)

name (VARCHAR)

location (VARCHAR)

2Ô∏è‚É£ book
Many Books ‚Üí One Library (Many-to-One)

One Book ‚Üí One BookDetail (One-to-One)

Columns:

id (PK, INT, AUTO_INCREMENT)

title (VARCHAR)

library_id (FK ‚Üí library.id)

book_detail_id (FK ‚Üí book_detail.id)

3Ô∏è‚É£ book_detail
One BookDetail ‚Üí One Book (One-to-One)

Columns:

id (PK, INT, AUTO_INCREMENT)

isbn (VARCHAR, UNIQUE)

published_year (INT)




























Memory management:
Java uses two main areas of memory to manage data: the heap and the stack.

Heap Memory:
	This is where Java stores objects. When you create a new object using the new keyword, it is allocated in the heap.
	Example:	String str = new String("Hello, World!");

Stack Memory:
	This is where Java stores method calls and local variables. Each time a method is called, a new block is created in the stack to hold the method‚Äôs variables and parameters. When the method finishes, this block is removed from the stack.

Garbage Collection uses : 
This helps to prevent memory leaks and allows the program to use memory efficiently.